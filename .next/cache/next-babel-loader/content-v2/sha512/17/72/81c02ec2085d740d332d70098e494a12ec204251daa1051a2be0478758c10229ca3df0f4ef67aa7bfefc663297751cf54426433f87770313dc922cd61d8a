{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from 'react';\nimport Image from 'next/image';\nimport '../styles/globals.css';\nimport '../public/assets/vendor/aos/aos.css';\nimport '../public/assets/vendor/bootstrap/css/bootstrap.min.css';\nimport '../public/assets/vendor/bootstrap-icons/bootstrap-icons.css';\nimport '../public/assets/vendor/boxicons/css/boxicons.min.css';\nimport '../public/assets/vendor/glightbox/css/glightbox.min.css';\nimport '../public/assets/vendor/remixicon/remixicon.css';\nimport '../public/assets/vendor/swiper/swiper-bundle.min.css';\nimport '../public/assets/css/style.css';\nimport PureCounter from '../public/assets/vendor/purecounter/purecounter_vanilla.js';\nimport GLightbox from '../public/assets/vendor/glightbox/js/glightbox.min.js';\nimport Swiper from '../public/assets/vendor/swiper/swiper-bundle.min.js';\nimport Isotope from '../public/assets/vendor/isotope-layout/isotope.pkgd.min.js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App({\n  Component,\n  pageProps\n}) {\n  const {\n    0: mounted,\n    1: setMounted\n  } = useState(false);\n  /**\r\n   * Easy selector helper function\r\n   */\n\n  const select = (el, all = false) => {\n    el = el.trim();\n\n    if (all) {\n      var _document;\n\n      return [...((_document = document) === null || _document === void 0 ? void 0 : _document.querySelectorAll(el))];\n    } else {\n      var _document2;\n\n      return (_document2 = document) === null || _document2 === void 0 ? void 0 : _document2.querySelector(el);\n    }\n  };\n  /**\r\n   * Easy event listener function\r\n   */\n\n\n  const on = (type, el, listener, all = false) => {\n    let selectEl = select(el, all);\n\n    if (selectEl) {\n      if (all) {\n        selectEl.forEach(e => e.addEventListener(type, listener));\n      } else {\n        selectEl.addEventListener(type, listener);\n      }\n    }\n  };\n  /**\r\n   * Easy on scroll event listener \r\n   */\n\n\n  const onscroll = (el, listener) => {\n    el.addEventListener('scroll', listener);\n  };\n\n  const initTerminal = async () => {\n    // const PureCounter = async () => {\n    //    await import('../public/assets/vendor/purecounter/purecounter_vanilla.js')\n    // }\n    const AOS = await import('../public/assets/vendor/aos/aos.js');\n    await import('../public/assets/vendor/bootstrap/js/bootstrap.bundle.min.js'); // const GLightbox = async () => {\n    //    await import('../public/assets/vendor/glightbox/js/glightbox.min.js')\n    // }\n    // const Isotope =  async () => {\n    //   await import('../public/assets/vendor/isotope-layout/isotope.pkgd.min.js')\n    // }\n    // const Swiper =  async () => {\n    //   await import('../public/assets/vendor/swiper/swiper-bundle.min.js')\n    // }\n\n    await import('../public/assets/vendor/php-email-form/validate.js');\n    await import('../public/assets/js/main.js');\n    let portfolioContainer = select('.portfolio-container');\n\n    if (portfolioContainer) {\n      let portfolioIsotope = new Isotope(portfolioContainer, {\n        itemSelector: '.portfolio-item'\n      });\n      let portfolioFilters = select('#portfolio-flters li', true);\n      on('click', '#portfolio-flters li', function (e) {\n        e.preventDefault();\n        portfolioFilters.forEach(function (el) {\n          el.classList.remove('filter-active');\n        });\n        this.classList.add('filter-active');\n        portfolioIsotope.arrange({\n          filter: this.getAttribute('data-filter')\n        });\n        portfolioIsotope.on('arrangeComplete', function () {\n          AOS.refresh();\n        });\n      }, true);\n    }\n    /**\r\n     * Initiate portfolio lightbox \r\n     */\n\n\n    GLightbox({\n      selector: '.portfolio-lightbox'\n    });\n    /**\r\n     * Hero carousel indicators\r\n     */\n\n    let heroCarouselIndicators = select(\"#hero-carousel-indicators\");\n    let heroCarouselItems = select('#heroCarousel .carousel-item', true);\n    heroCarouselItems.forEach((item, index) => {\n      index === 0 ? heroCarouselIndicators.innerHTML += \"<li data-bs-target='#heroCarousel' data-bs-slide-to='\" + index + \"' class='active'></li>\" : heroCarouselIndicators.innerHTML += \"<li data-bs-target='#heroCarousel' data-bs-slide-to='\" + index + \"'></li>\";\n    });\n    /**\r\n     * Initiate glightbox \r\n     */\n\n    GLightbox({\n      selector: '.glightbox'\n    });\n    new Swiper('.testimonials-slider', {\n      speed: 600,\n      loop: true,\n      autoplay: {\n        delay: 5000,\n        disableOnInteraction: false\n      },\n      slidesPerView: 'auto',\n      pagination: {\n        el: '.swiper-pagination',\n        type: 'bullets',\n        clickable: true\n      }\n    });\n    new Swiper('.portfolio-details-slider', {\n      speed: 400,\n      loop: true,\n      autoplay: {\n        delay: 5000,\n        disableOnInteraction: false\n      },\n      pagination: {\n        el: '.swiper-pagination',\n        type: 'bullets',\n        clickable: true\n      }\n    });\n    AOS.init({\n      duration: 1000,\n      easing: \"ease-in-out\",\n      once: true,\n      mirror: false\n    });\n    PureCounter(); // Add logic with `term`\n\n    let preloader = select('#preloader');\n    preloader === null || preloader === void 0 ? void 0 : preloader.remove();\n  }; // useEffect(() => {\n  //   // setTimeout(() => {\n  //   //   initTerminal()\n  //   // }, 100)\n  //   if (mounted) {\n  //     setTimeout(() => initTerminal(), 200)\n  //   }\n  // }, [mounted])\n\n\n  useEffect(() => {\n    setTimeout(() => initTerminal(), 200);\n  }); // console.log('pageProps: ', pageProps)\n  // console.log('Component: ', Component)\n\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({}, pageProps), {}, {\n    suppressHydrationWarning: true\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}