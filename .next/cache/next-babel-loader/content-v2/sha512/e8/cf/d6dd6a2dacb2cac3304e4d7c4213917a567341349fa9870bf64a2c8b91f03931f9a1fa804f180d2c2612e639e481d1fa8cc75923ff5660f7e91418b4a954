{"ast":null,"code":"import { useEffect } from \"react\";\n/**\r\n * Easy selector helper function\r\n */\n\nconst select = (el, all = false) => {\n  el = el.trim();\n\n  if (all) {\n    return [...document.querySelectorAll(el)];\n  } else {\n    return document.querySelector(el);\n  }\n};\n/**\r\n * Easy event listener function\r\n */\n\n\nconst on = (type, el, listener, all = false) => {\n  let selectEl = select(el, all);\n\n  if (selectEl) {\n    if (all) {\n      selectEl.forEach(e => e.addEventListener(type, listener));\n    } else {\n      selectEl.addEventListener(type, listener);\n    }\n  }\n};\n/**\r\n * Easy on scroll event listener \r\n */\n\n\nconst onscroll = (el, listener) => {\n  el.addEventListener('scroll', listener);\n};\n\nexport const importJS = async () => {\n  //   const initTerminal = async () => {\n  const PureCounter = async () => {\n    await import('../public/assets/vendor/purecounter/purecounter_vanilla.js');\n  };\n\n  const AOS = await import('../public/assets/vendor/aos/aos.js');\n  await import('../public/assets/vendor/bootstrap/js/bootstrap.bundle.min.js');\n\n  const GLightbox = async () => {\n    await import('../public/assets/vendor/glightbox/js/glightbox.min.js');\n  };\n\n  const Isotope = async () => {\n    await import('../public/assets/vendor/isotope-layout/isotope.pkgd.min.js');\n  };\n\n  const Swiper = async () => {\n    await import('../public/assets/vendor/swiper/swiper-bundle.min.js');\n  };\n\n  await import('../public/assets/vendor/php-email-form/validate.js');\n  await import('../public/assets/js/main.js');\n  let portfolioContainer = select('.portfolio-container');\n\n  if (portfolioContainer) {\n    let portfolioIsotope = Isotope(portfolioContainer, {\n      itemSelector: '.portfolio-item'\n    });\n    let portfolioFilters = select('#portfolio-flters li', true);\n    on('click', '#portfolio-flters li', function (e) {\n      e.preventDefault();\n      portfolioFilters.forEach(function (el) {\n        el.classList.remove('filter-active');\n      });\n      this.classList.add('filter-active');\n      portfolioIsotope.arrange({\n        filter: this.getAttribute('data-filter')\n      });\n      portfolioIsotope.on('arrangeComplete', function () {\n        AOS.refresh();\n      });\n    }, true);\n  }\n  /**\r\n   * Hero carousel indicators\r\n   */\n\n\n  let heroCarouselIndicators = select(\"#hero-carousel-indicators\");\n  let heroCarouselItems = select('#heroCarousel .carousel-item', true);\n  heroCarouselItems.forEach((item, index) => {\n    index === 0 ? heroCarouselIndicators.innerHTML += \"<li data-bs-target='#heroCarousel' data-bs-slide-to='\" + index + \"' class='active'></li>\" : heroCarouselIndicators.innerHTML += \"<li data-bs-target='#heroCarousel' data-bs-slide-to='\" + index + \"'></li>\";\n  });\n  /**\r\n   * Initiate glightbox \r\n   */\n\n  GLightbox({\n    selector: '.glightbox'\n  });\n  Swiper('.testimonials-slider', {\n    speed: 600,\n    loop: true,\n    autoplay: {\n      delay: 5000,\n      disableOnInteraction: false\n    },\n    slidesPerView: 'auto',\n    pagination: {\n      el: '.swiper-pagination',\n      type: 'bullets',\n      clickable: true\n    }\n  });\n  Swiper('.portfolio-details-slider', {\n    speed: 400,\n    loop: true,\n    autoplay: {\n      delay: 5000,\n      disableOnInteraction: false\n    },\n    pagination: {\n      el: '.swiper-pagination',\n      type: 'bullets',\n      clickable: true\n    }\n  });\n  AOS.init({\n    duration: 1000,\n    easing: \"ease-in-out\",\n    once: true,\n    mirror: false\n  });\n  PureCounter(); // Add logic with `term`\n\n  let preloader = select('#preloader');\n  preloader === null || preloader === void 0 ? void 0 : preloader.remove(); //   }\n};","map":null,"metadata":{},"sourceType":"module"}